services:
  zookeeper:
    image: quay.io/debezium/zookeeper:latest
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888

  kafka:
    image: quay.io/debezium/kafka:latest
    ports:
     - 9092:9092
     - 29092:29092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
     - KAFKA_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
     - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
     - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
     - KAFKA_INTER_BROKER_LISTENER_NAME= INTERNAL

  connect:
    image: quay.io/debezium/connect:latest
    ports:
     - 8083:8083
    links:
     - kafka
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses

  akhq:
    # build:
    #   context: .
    image: tchiotludo/akhq
    ports:
     - 8080:8080
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
              connect:
                - name: "connect"
                  url: "http://connect:8083"
  
  sql-2022:
    container_name: sql-2022
    hostname: sql-2022
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: "P@ssw0rd?!?"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_AGENT_ENABLED: "true"
    ports:
      - "1499:1433"
    cpu_count: 4
    mem_limit: 8Gb
    healthcheck:
      test: [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P <password> -Q 'SELECT 1' || exit 1"
        ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  order-db:
    image: quay.io/debezium/example-postgres:latest
    ports:
     - 5432:5432
    healthcheck:
      test: "pg_isready -U orderuser -d orderdb"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
     - POSTGRES_USER=orderuser
     - POSTGRES_PASSWORD=orderpw
     - POSTGRES_DB=orderdb
    volumes:
     - ./postgresql/init_schema.sql:/docker-entrypoint-initdb.d/init.sql