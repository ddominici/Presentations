name: Uptime (days)
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "uptime")
                  |> last()
                  |> map(fn: (r) => ({r with _value: r._value / 1440 }))

name: Target Memory
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["counter"] == "Target Server Memory (KB)")
                  |> last()
                  |> map(fn: (r) => ({r with _value: r._value / 1024.00}))
        
name: SQL Server Activity
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_field"] == "value")
                  |> filter(fn: (r) => r["counter"] == "SQL Compilations/sec" or r["counter"] == "SQL Re-Compilations/sec" or r["counter"] == "User Connections" or r["counter"] == "Batch Requests/sec" or r["counter"] == "Logouts/sec" or r["counter"] == "Logins/sec" or r["counter"] == "Processes blocked")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Buffer Cache - Disk
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_field"] == "value")
                  |> filter(fn: (r) => r["counter"] == "Full Scans/sec" or r["counter"] == "Index Searches/sec" or r["counter"] == "Page Splits/sec" or r["counter"] == "Page lookups/sec" or r["counter"] == "Page reads/sec" or r["counter"] == "Page writes/sec" or r["counter"] == "Readahead pages/sec" or r["counter"] == "Lazy writes/sec" or r["counter"] == "Checkpoint pages/sec")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Wait Time
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == v.mssqlType)
                  |> filter(fn: (r) => r["_field"] == "wait_time_ms")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Database | Log Size
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_performance")
                  |> filter(fn: (r) => r["counter"] == "Log File(s) Size (KB)")
                  |> filter(fn: (r) => r["instance"] == "master" or r["instance"] == "model" or r["instance"] == "msdb" or r["instance"] == "mssqlsystemresource" or r["instance"] == "tempdb")
        
name: Reads | Row and Log Bytes
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_database_io")
                  |> filter(fn: (r) => r["_field"] == "read_bytes")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_database_io")
                  |> filter(fn: (r) => r["_field"] == "read_bytes")
                  |> aggregateWindow(every: v.windowPeriod, fn: last)
                  |> yield(name: "last")
        
name: Reads | Row and Log (ms)
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_database_io")
                  |> filter(fn: (r) => r["_field"] == "read_latency_ms" or r["_field"] == "rg_read_stall_ms")
                  |> aggregateWindow(every: v.windowPeriod, fn: last)
                  |> yield(name: "last")
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_database_io")
                  |> filter(fn: (r) => r["_field"] == "read_latency_ms" or r["_field"] == "rg_read_stall_ms")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: CPU Usage by SQL
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_field"] == "value")
                  |> filter(fn: (r) => r["counter"] == "CPU usage %")
        
name: Used Memory
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["counter"] == "Used memory (KB)")
                  |> last()
                  |> map(fn: (r) => ({r with _value: r._value / 100024.00}))
        
name: User Connections
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_performance")
                  |> filter(fn: (r) => r["_field"] == "value")
                  |> filter(fn: (r) => r["counter"] == "User Connections")
        
name: Disk Write Time
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "win_disk")
                  |> filter(fn: (r) => r["_field"] == "Percent_Disk_Write_Time")
        
name: Databases Activity
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_field"] == "value")
                  |> filter(fn: (r) => r["counter"] == "Transactions/sec" or r["counter"] == "Write Transactions/sec" or r["counter"] == "Log Flush Wait Time" or r["counter"] == "Log Flushes/sec" or r["counter"] == "Lock Timeouts/sec" or r["counter"] == "Number of Deadlocks/sec" or r["counter"] == "Lock Waits/sec" or r["counter"] == "Latch Waits/sec")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Memory clerks
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_memory_clerks")
                  |> filter(fn: (r) => r["_field"] == "size_kb")
                  |> filter(fn: (r) => r["database_name"] == "master")
                  |> derivative(unit: v.windowPeriod, nonNegative: true)
                  |> yield(name: "nonnegative derivative")
        
name: Wait Tasks
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == v.mssqlType)
                  |> filter(fn: (r) => r["_field"] == "waiting_tasks_count")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Database | Data Size
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_performance")
                  |> filter(fn: (r) => r["counter"] == "Data File(s) Size (KB)")
                  |> filter(fn: (r) => r["instance"] == "master" or r["instance"] == "model" or r["instance"] == "msdb" or r["instance"] == "mssqlsystemresource" or r["instance"] == "tempdb")
                  |> aggregateWindow(every: v.windowPeriod, fn: last)
                  |> yield(name: "last")
        
name: Writes | Row and Log Bytes
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_database_io")
                  |> filter(fn: (r) => r["_field"] == "write_bytes" or r["_field"] == "writes")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Writes | Row and Log (ms)
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_database_io")
                  |> filter(fn: (r) => r["_field"] == "write_latency_ms" or r["_field"] == "rg_write_stall_ms")
                  |> derivative(unit: v.windowPeriod, nonNegative: false)
                  |> yield(name: "derivative")
        
name: Online
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "db_online")

name: Offline
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "db_offline")
        
name: Restoring
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "db_restoring")
        
name: Recovering
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "db_recovering")
        
name: Disk Read Time
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "win_disk")
                  |> filter(fn: (r) => r["_field"] == "Percent_Disk_Read_Time")
        
name: Pending
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "db_recoveryPending")
        
name: Suspect
                from(bucket: "mssql")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "sqlserver_server_properties")
                  |> filter(fn: (r) => r["_field"] == "db_suspect")
